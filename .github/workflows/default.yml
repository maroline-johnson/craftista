name: Default Workflow
on: [workflow_dispatch]
jobs:
    Default-1:
        runs-on: ubuntu-latest
        steps:
            - run: echo "The job was automatically triggered by a ${{ github.event_name }} event. This job is now running on a ${{ runner.os }} server. The name of the branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            - run: echo "The ${{ github.repository }} repository has been cloned to the runner. The workflow is now ready to test your code on the runner."

            - name: List files in the repository
              run: |
                ls ${{ github.workspace }}

    Lint:
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: Super Linter
              uses: super-linter/super-linter@v7.2.1
              env:
                GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    Security-Scan: 
        runs-on: ubuntu-latest
        steps:
            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: TruffleHog
              uses: trufflesecurity/trufflehog@main
              with:
                extra_args: --results=verified,unknown

    Report-Result:
        runs-on: ubuntu-latest
        needs: [Default-1, Lint, Security-Scan]
        steps:
            - run: echo "This job's status is ${{ job.status }}."
            - name: Calculate build start time
              id: build_start_time
              run: echo "BUILD_START_TIME=$(date +%s)" >> $GITHUB_ENV

            - name: Check out repository code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Calculate build duration
              id: calculate_duration
              run: |
                end_time=$(date +%s)
                duration=$((end_time - $BUILD_START_TIME))
                echo "duration=$duration" >> $GITHUB_ENV
                echo "::set-output name=duration::$duration"

            - name: Get short commit hash
              id: short_commit
              run: echo "SHORT_SHA=${GITHUB_SHA:0:7}" >> $GITHUB_ENV

            - name: Send custom JSON data to Slack workflow
              id: slack
              uses: slackapi/slack-github-action@v1.26.0
              with:
                payload: |
                  {
                    "blocks": [
                      {
                        "type": "section",
                        "text": {
                          "type": "mrkdwn",
                          "text": "*:white_check_mark: Succeeded GitHub Actions*"
                        }
                      },
                      {
                        "type": "section",
                        "fields": [
                          {
                            "type": "mrkdwn",
                            "text": "*Repo*\n<https://github.com/${{ github.repository }}|${{ github.repository }}>"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Commit*\n<${{ github.event.head_commit.url }}|${{ env.SHORT_SHA }}>"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Author*\n${{ github.event.head_commit.author.name }}"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Job*\n`${{ github.job }}`"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Event Name*\n`${{ github.event_name }}`"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Workflow*\n`${{ github.workflow }}`"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Build Logs*\n<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Logs>"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Took*\n`${{ steps.calculate_duration.outputs.duration }} sec`"
                          },
                          {
                            "type": "mrkdwn",
                            "text": "*Message*\n${{ github.event.head_commit.message }}"
                          }
                        ]
                      }
                    ]
                  }
              env:
                SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
                SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK